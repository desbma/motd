[package]
name = "motd"
version = "1.3.1"
authors = ["desbma <desbma@users.noreply.github.com>"]
description = "Dynamically generate Linux MOTD SSH banner"
license = "GPL-3.0-only"
edition = "2021"

[profile.release]
lto = true
codegen-units = 1
panic = "abort"
strip = true

[dev-dependencies]
serial_test = { version = "3.1.1", default-features = false }

[dependencies]
ansi_term = { version = "0.12.1", default-features = false }
anyhow = { version = "1.0.89", default-features = false, features = ["std", "backtrace"] }
clap =  { version = "3.2.25", default-features = false, features = ["std", "color"] }
itertools =  { version = "0.13.0", default-features = false, features = ["use_std"] }
libc =  { version = "0.2.159", default-features = false }
num_cpus =  { version = "1.16.0", default-features = false }
regex = { version = "1.11.0", default-features = false, features = ["std"] }
serde = { version = "1.0.210", default-features = false, features = ["derive", "std"] }
serde_regex = { version = "1.1.0", default-features = false }
termsize =  { version = "0.1.9", default-features = false }
toml = { version = "0.8.19", default-features = false, features = ["parse"] }
walkdir = { version = "2.5.0", default-features = false }
xdg = { version = "2.5.2", default-features = false }

[lints.rust]
# https://doc.rust-lang.org/rustc/lints/listing/allowed-by-default.html
explicit_outlives_requirements = "warn"
missing_docs = "warn"
non_ascii_idents = "deny"
redundant-lifetimes = "warn"
single-use-lifetimes = "warn"
unit-bindings = "warn"
unreachable_pub = "warn"
unused_crate_dependencies = "warn"
unused-lifetimes = "warn"
unused-qualifications = "warn"

[lints.clippy]
pedantic = { level = "warn", priority = -1 }
cast_possible_truncation = "allow"
cast_precision_loss = "allow"
cast_sign_loss = "allow"
# below lints are from clippy::restriction, and assume clippy >= 1.81
# https://rust-lang.github.io/rust-clippy/master/index.html#/?levels=allow&groups=restriction
allow_attributes = "warn"
clone_on_ref_ptr = "warn"
dbg_macro = "warn"
empty_enum_variants_with_brackets = "warn"
expect_used = "warn"
field_scoped_visibility_modifiers = "warn"
fn_to_numeric_cast_any = "warn"
format_push_string = "warn"
if_then_some_else_none = "warn"
impl_trait_in_params = "warn"
infinite_loop = "warn"
lossy_float_literal = "warn"
# missing_docs_in_private_items = "warn"
mixed_read_write_in_expression = "warn"
multiple_inherent_impl = "warn"
needless_raw_strings = "warn"
panic = "warn"
pub_without_shorthand = "warn"
redundant_type_annotations = "warn"
ref_patterns = "warn"
renamed_function_params = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_name_method = "warn"
self_named_module_files = "warn"
semicolon_inside_block = "warn"
shadow_unrelated = "warn"
str_to_string = "warn"
string_slice = "warn"
string_to_string = "warn"
tests_outside_test_module = "warn"
try_err = "warn"
undocumented_unsafe_blocks = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unneeded_field_pattern = "warn"
unseparated_literal_suffix = "warn"
# unwrap_used = "warn"
verbose_file_reads = "warn"
